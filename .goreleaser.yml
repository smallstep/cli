# This is an example .goreleaser.yml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
project_name: step
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod download
    # - go generate ./...
builds:
  - goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm
      - arm64
      - 386
      - mips
      - mips64
    goarm:
      - 6
      - 7
    gomips:
      - hardfloat
      - softfloat
    ignore:
      - goos: darwin
        goarch: arm
      - goos: darwin
        goarch: 386
      - goos: darwin
        goarch: mips
      - goos: darwin
        goarch: mips64
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: arm64
      - goos: windows
        goarch: 386
      - goos: windows
        goarch: mips
      - goos: windows
        goarch: mips64

    flags:
      - -trimpath
    main: ./cmd/step/main.go
    binary: bin/step
    ldflags:
      - -w -X main.Version={{.Version}} -X main.BuildTime={{.Date}}
archives:
  -
    # Can be used to change the archive formats for specific GOOSs.
    # Most common use case is to archive as zip on Windows.
    # Default is empty.
    name_template: "{{ .ProjectName }}_{{ .Os }}_{{ .Version }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ if .Mips }}_{{ .Mips }}{{ end }}"
    format_overrides:
      - goos: windows
        format: zip
    wrap_in_directory: "{{ .ProjectName }}_{{ .Version }}"
    files:
      - README.md
      - LICENSE
      - autocomplete/*
source:
  enabled: true
  name_template: '{{ .ProjectName }}_{{ .Version }}'
checksum:
  name_template: 'checksums.txt'
signs:
- cmd: cosign
  stdin: '{{ .Env.COSIGN_PWD }}'
  args: ["sign-blob", "-key=/tmp/cosign.key", "-output=${signature}", "${artifact}"]
  artifacts: all
snapshot:
  name_template: "{{ .Tag }}-next"
release:
  # Repo in which the release will be created.
  # Default is extracted from the origin remote URL or empty if its private hosted.
  # Note: it can only be one: either github, gitlab or gitea
  github:
    owner: smallstep
    name: cli

  # IDs of the archives to use.
  # Defaults to all.
  #ids:
  #  - foo
  #  - bar

  # If set to true, will not auto-publish the release.
  # Default is false.
  draft: false

  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: auto

  # You can change the name of the release.
  # Default is `{{.Tag}}`
  #name_template: "{{.ProjectName}}-v{{.Version}} {{.Env.USER}}"

  # You can disable this pipe in order to not upload any artifacts.
  # Defaults to false.
  #disable: true

  # You can add extra pre-existing files to the release.
  # The filename on the release will be the last part of the path (base). If
  # another file with the same name exists, the latest one found will be used.
  # Defaults to empty.
  #extra_files:
  #  - glob: ./path/to/file.txt
  #  - glob: ./glob/**/to/**/file/**/*
  #  - glob: ./glob/foo/to/bar/file/foobar/override_from_previous
scoop:
  # Template for the url which is determined by the given Token (github or gitlab)
  # Default for github is "https://github.com/<repo_owner>/<repo_name>/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
  # Default for gitlab is "https://gitlab.com/<repo_owner>/<repo_name>/uploads/{{ .ArtifactUploadHash }}/{{ .ArtifactName }}"
  # Default for gitea is "https://gitea.com/<repo_owner>/<repo_name>/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
  url_template: "http://github.com/smallstep/cli/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

  # Repository to push the app manifest to.
  bucket:
    owner: smallstep
    name: scoop-bucket

  # Git author used to commit to the repository.
  # Defaults are shown.
  commit_author:
    name: goreleaserbot
    email: goreleaser@smallstep.com

  # The project name and current git tag are used in the format string.
  commit_msg_template: "Scoop update for {{ .ProjectName }} version {{ .Tag }}"

  # Your app's homepage.
  # Default is empty.
  homepage: "https://smallstep.com/"

  # Skip uploads for prerelease.
  skip_upload: auto

  # Your app's description.
  # Default is empty.
  description: "Crypto toolkit for working with X.509, OAuth, JWT, OATH OTP, etc."

  # Your app's license
  # Default is empty.
  license: "Apache-2.0"

  #dockers:
  #  - dockerfile: docker/Dockerfile
  #    goos: linux
  #    goarch: amd64
  #    use_buildx: true
  #    image_templates:
  #    - "smallstep/step-cli:latest"
  #    - "smallstep/step-cli:{{ .Tag }}"
  #    build_flag_templates:
  #    - "--platform=linux/amd64"
  #  - dockerfile: docker/Dockerfile
  #    goos: linux
  #    goarch: 386
  #    use_buildx: true
  #    image_templates:
  #    - "smallstep/step-cli:latest"
  #    - "smallstep/step-cli:{{ .Tag }}"
  #    build_flag_templates:
  #    - "--platform=linux/386"
  #  - dockerfile: docker/Dockerfile
  #    goos: linux
  #    goarch: arm
  #    goarm: 7
  #    use_buildx: true
  #    image_templates:
  #    - "smallstep/step-cli:latest"
  #    - "smallstep/step-cli:{{ .Tag }}"
  #    build_flag_templates:
  #    - "--platform=linux/arm/v7"
  #  - dockerfile: docker/Dockerfile
  #    goos: linux
  #    goarch: arm64
  #    use_buildx: true
  #    image_templates:
  #    - "smallstep/step-cli:latest"
  #    - "smallstep/step-cli:{{ .Tag }}"
  #    build_flag_templates:
  #    - "--platform=linux/arm64/v8"
